<s:SparkSkin xmlns:fb="http://ns.adobe.com/flashbuilder/2009" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/halo" xmlns:s="library://ns.adobe.com/flex/spark"
			 disabledAlpha=".1">
	<fx:Metadata>
		[HostComponent("spark.components.Button")]
	</fx:Metadata>
	
	<fx:Script fb:purpose="styling">
		<![CDATA[
			import mx.events.StateChangeEvent;

			/* Define the skin elements that should not be colorized.
			For button, the graphics are colorized but the label is not. */
			static private const exclusions:Array = ["labelDisplay"];

			/**
			 * @private
			 */
			override public function get colorizeExclusions():Array {
				return exclusions;
			}

			/**
			 * @private
			 */
			override protected function initializationComplete():void {
				useChromeColor = true;
				super.initializationComplete();
			}

			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
				var cr:Number = getStyle("cornerRadius");

				if (cornerRadius != cr) {
					cornerRadius = cr;
					shadow.radiusX = cornerRadius;
					fill.radiusX = cornerRadius;
					lowlight.radiusX = cornerRadius;
					highlight.radiusX = cornerRadius;
					border.radiusX = cornerRadius;
				}

				if (highlightStroke) {
					highlightStroke.radiusX = cornerRadius;
				}
				if (hldownstroke1) {
					hldownstroke1.radiusX = cornerRadius;
				}
				if (hldownstroke2) {
					hldownstroke2.radiusX = cornerRadius;
				}

				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}

			private var cornerRadius:Number = 2;
		]]>
	</fx:Script>

	<s:layout>
		<s:BasicLayout />
	</s:layout>

	<s:states>
		<s:State name="up" />
		<s:State name="over" />
		<s:State name="down" />
		<s:State name="disabled" />
	</s:states>


	<!-- layer 1: shadow -->
	<!--- @private -->
	<s:Rect id="shadow" bottom="-1" left="-1" right="-1" top="-1" radiusX="2" alpha="0">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0x000000" color.down="0xFFFFFF" alpha="0.01" alpha.down="0" />
				<s:GradientEntry color="0x000000" color.down="0xFFFFFF" alpha="0.07" alpha.down="0.5" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<!-- layer 2: fill -->
	<!--- @private -->
	<s:Rect id="fill" bottom="1" left="1" right="1" top="1" radiusX="2" alpha="0">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xFFFFFF" color.down="0xAAAAAA" color.over="0xBBBDBD" alpha="0.85" />
				<s:GradientEntry color="0xD8D8D8" color.down="0x929496" color.over="0x9FA0A1" alpha="0.85" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<!-- layer 3: fill lowlight -->
	<!--- @private -->
	<s:Rect id="lowlight" bottom="1" left="1" right="1" top="1" radiusX="2" alpha="0">
		<s:fill>
			<s:LinearGradient rotation="270">
				<s:GradientEntry color="0x000000" ratio="0.0" alpha="0.0627" />
				<s:GradientEntry color="0x000000" ratio="0.48" alpha="0.0099" />
				<s:GradientEntry color="0x000000" ratio="0.48001" alpha="0" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<!-- layer 4: fill highlight -->
	<!--- @private -->
	<s:Rect id="highlight" bottom="1" left="1" right="1" top="1" radiusX="2" alpha="0">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xFFFFFF" ratio="0.0" alpha="0.33" alpha.over="0.22" alpha.down="0.12" />
				<s:GradientEntry color="0xFFFFFF" ratio="0.48" alpha="0.33" alpha.over="0.22" alpha.down="0.12" />
				<s:GradientEntry color="0xFFFFFF" ratio="0.48001" alpha="0" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<!-- layer 5: highlight stroke (all states except down) -->
	<!--- @private -->
	<s:Rect id="highlightStroke" bottom="1" left="1" right="1" top="1" radiusX="2" excludeFrom="down" alpha="0">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry color="0xFFFFFF" alpha.over="0.22" />
				<s:GradientEntry color="0xD8D8D8" alpha.over="0.22" />
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>

	<!-- layer 6: highlight stroke (down state only) -->
	<!--- @private -->
	<s:Rect id="hldownstroke1" bottom="1" left="1" right="1" top="1" radiusX="2" includeIn="down" alpha="0">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry color="0x000000" alpha="0.25" ratio="0.0" />
				<s:GradientEntry color="0x000000" alpha="0.25" ratio="0.001" />
				<s:GradientEntry color="0x000000" alpha="0.07" ratio="0.0011" />
				<s:GradientEntry color="0x000000" alpha="0.07" ratio="0.965" />
				<s:GradientEntry color="0x000000" alpha="0.00" ratio="0.9651" />
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>
	<!--- @private -->
	<s:Rect id="hldownstroke2" bottom="2" left="2" right="2" top="2" radiusX="2" includeIn="down" alpha="0">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry color="0x000000" alpha="0.09" ratio="0.0" />
				<s:GradientEntry color="0x000000" alpha="0.00" ratio="0.0001" />
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>

	<!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
	<!--- @private -->
	<s:Rect id="border" width="69" height="20" bottom="0" left="0" right="0" top="0" radiusX="2" alpha="0">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry color="0x000000" alpha="0.5625" alpha.down="0.6375" />
				<s:GradientEntry color="0x000000" alpha="0.75" alpha.down="0.85" />
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>


	<s:Group horizontalCenter="0" verticalCenter="0" minHeight="28">
		<s:layout>
			<s:HorizontalLayout horizontalAlign="center" paddingBottom="{ hostComponent.getStyle('paddingBottom')}" paddingLeft="{ hostComponent.getStyle('paddingLeft')}"
								paddingRight="{ hostComponent.getStyle('paddingRight')}" paddingTop="{ hostComponent.getStyle('paddingTop')}" verticalAlign="middle" gap="0" />
		</s:layout>
		<s:BitmapImage id="icon" width="{hostComponent.getStyle('iconWidth')}" height="{hostComponent.getStyle('iconHeight')}" verticalCenter="0"
					   source="{hostComponent.getStyle('iconUp')}" alpha="{(this.currentState == 'up')? 1 : .4}" />
		<s:Label paddingLeft="5" verticalCenter="0" text="{hostComponent.label}" includeInLayout="{( hostComponent.label != '' )}" visible="{( hostComponent.label != '' )}" />
	</s:Group>

</s:SparkSkin>
