<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark"
		 width="100%" height="100%">

	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.events.CloseEvent;

			private var _warningText:String = "Mostrar advertencias.";
			
			private var _dataProvider:XMLListCollection = new XMLListCollection();


			private var _type:int = 1;

			private var _showButtons:Boolean = false;
			
			private var _showButtonDetails:Boolean = true;

			private var _cornerRadius:int = 0;

			private var _backgroundAlpha:Number = 0.16;

			[Bindable]
			public function get showButtonDetails():Boolean {
				return _showButtonDetails;
			}

			public function set showButtonDetails(value:Boolean):void {
				_showButtonDetails = value;
			}

			[Bindable]
			public function get dataProvider():XMLListCollection {
				return _dataProvider;
			}

			public function set dataProvider(value:XMLListCollection):void {
				_dataProvider = value;
			}

			[Bindable]
			public function get warningText():String {
				return _warningText;
			}

			public function set warningText(value:String):void {
				_warningText = value;
			}

			[Bindable]
			public function get backgroundAlpha():Number {
				return _backgroundAlpha;
			}

			public function set backgroundAlpha(value:Number):void {
				_backgroundAlpha = value;
			}

			[Bindable]
			public function get cornerRadius():int {
				return _cornerRadius;
			}

			public function set cornerRadius(value:int):void {
				_cornerRadius = value;
			}

			[Bindable]
			public function get showButtons():Boolean {
				return _showButtons;
			}

			public function set showButtons(value:Boolean):void {
				_showButtons = value;
			}

			[Bindable]
			public function get type():int {
				return _type;
			}

			public function set type(value:int):void {
				_type = value;

				dispatchEvent(new Event("changeType"));
			}

			protected function button2_clickHandler(event:MouseEvent):void {
				var button:ToggleButton = event.target as ToggleButton;

				groupDetails.visible = button.selected;
				groupDetails.includeInLayout = button.selected;

				button.toolTip = button.selected ? "Ocultar Detalles" : "Mostrar Detalles";
				button.label = button.selected ? "<< Detalles" : "Detalles >>";

			}

			[Bindable(event="changeType")]
			private function getSource():Class {
				switch (type) {
					case 0:
						{
							return StyleManager.getStyleManager(null).getStyleDeclaration('.icons32').getStyle('ErrorIcon');
						}
					case 1:
						{
							return StyleManager.getStyleManager(null).getStyleDeclaration('.icons32').getStyle('WarningIcon');
						}
					case 2:
						{
							return StyleManager.getStyleManager(null).getStyleDeclaration('.icons32').getStyle('InformationIcon');
						}
					default:
						{
							return null

						}
				}

			}

			protected function cmdContinuar_clickHandler(event:MouseEvent):void {
				dispatchEvent(new Event("_continuarEvent"));
			}

			protected function cmdCancelar_clickHandler(event:MouseEvent):void {
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
			
			private function list_labelFunc(item:Object):String {
				return item.toString();
			}
		]]>
	</fx:Script>


	<s:BorderContainer id="warningPnl" width="100%" height="100%" backgroundAlpha="{backgroundAlpha}" backgroundColor="#6E87B5" cornerRadius="{cornerRadius}" borderAlpha="0">
		<s:VGroup width="100%" height="100%" styleName="pntLineasVenta">
			<s:HGroup width="100%" height="90" paddingLeft="28" paddingRight="20" verticalAlign="middle">
				<mx:Image id="imgWarning" width="32" height="32" source="{getSource()}" />
				<s:Label width="100%" text="{warningText}" maxDisplayedLines="3" styleName="myLabel" />
			</s:HGroup>
			<s:VGroup id="groupDetails" width="100%" height="160" paddingBottom="0" paddingLeft="10" paddingRight="10" paddingTop="0" includeInLayout="false" visible="false">
				<s:Label text="Detalles" />
				<s:Scroller width="100%" height="100%">
					<s:viewport>
						<s:Group width="100%" height="100%">
							<s:List id="listaClientes" width="100%" height="100%" selectionColor="0xfafafa"
									dataProvider="{dataProvider}" labelFunction="list_labelFunc" alternatingItemColors="[0xFFFFFF, 0xF2F2FC]"/>
						</s:Group>

					</s:viewport>
				</s:Scroller>
			</s:VGroup>
			<s:HGroup width="100%" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10" visible="{showButtons}" includeInLayout="{showButtons}">
				<s:Spacer width="100%" />
				<s:Button id="cmdContinuar" click="cmdContinuar_clickHandler(event)" height="28" label="Continuar" toolTip="Continuar" visible="{showButtonDetails}" styleName="textButton"/>
				<s:Button id="cmdCancelar" click="cmdCancelar_clickHandler(event)" height="28" label="Cancelar" toolTip="Cancelar" styleName="textButton"/>
				<s:ToggleButton id="btnDetails" click="button2_clickHandler(event)" height="28" label="Detalles >>" toolTip="Mostrar detalles" selected="false" />
			</s:HGroup>
		</s:VGroup>
	</s:BorderContainer>

</s:Group>
