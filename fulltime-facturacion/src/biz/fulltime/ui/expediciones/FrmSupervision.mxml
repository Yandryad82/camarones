<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:components="components.*" xmlns:components1="biz.fulltime.ui.components.*" xmlns:expediciones="biz.fulltime.ui.expediciones.*"
		  xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:loader="biz.fulltime.util.loader.*" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:renderers="biz.fulltime.ui.renderers.*"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  width="100%" height="100%" creationComplete="group1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import biz.fulltime.conf.GeneralOptions;
			import biz.fulltime.conf.ServerConfig;
			import biz.fulltime.dto.AgendaTareaDTO;
			import biz.fulltime.expediciones.AgendaTareaQuery;
			import biz.fulltime.model.AgendaTarea;
			import biz.fulltime.model.Capitulo;
			import biz.fulltime.model.Contacto;
			import biz.fulltime.model.Tarea;
			import biz.fulltime.model.Usuario;
			
			import com.adobe.utils.DateUtil;
			import com.hillelcoren.components.AutoComplete;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.IFlexDisplayObject;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			import spark.components.TitleWindow;
			
			import util.CatalogoFactory;
			import util.DateUtil;

			private var remObj:RemoteObject;

			[Bindable]
			private var _tareas:ArrayCollection;

			[Bindable]
			private var _tareasMat:ArrayCollection;

			[Bindable]
			private var _tareasVes:ArrayCollection;

			[Bindable]
			private var catalogs:CatalogoFactory = CatalogoFactory.getInstance();

			private const WINDOW_WIDTH:Number = 640;

			private const WINDOW_HEIGHT:Number = 600;

			protected function group1_creationCompleteHandler(event:FlexEvent):void {
				remObj = new RemoteObject();
				remObj.destination = "CreatingRpc";
				remObj.channelSet = ServerConfig.getInstance().channelSet;
				remObj.showBusyCursor = true;
				remObj.addEventListener(ResultEvent.RESULT, onResult);
				remObj.addEventListener(FaultEvent.FAULT, onFault);

				callLater(function():void {
					txtDate.selectedDate = new Date();
					moverseA(txtDate.selectedDate);
				});
			}

			protected function cmdPrevious_clickHandler(event:MouseEvent):void {
				var nuevaFecha:Date = util.DateUtil.clone(txtDate.selectedDate).subtract(util.DateUtil.DAY, 1).datetime;

				txtDate.selectedDate = nuevaFecha;
				moverseA(txtDate.selectedDate);
			}

			protected function cmdNext_clickHandler(event:MouseEvent):void {
				var nuevaFecha:Date = util.DateUtil.clone(txtDate.selectedDate).add(util.DateUtil.DAY, 1).datetime;

				txtDate.selectedDate = nuevaFecha;
				moverseA(txtDate.selectedDate);
			}

			protected function cmdFechaHoy_clickHandler(event:MouseEvent):void {
				txtDate.selectedDate = new Date();
				moverseA(txtDate.selectedDate);
			}

			protected function cmbUsuarioAsignado_changeHandler(event:Event):void {
				moverseA(txtDate.selectedDate);
			}

			protected function cmbTarea_changeHandler(event:Event):void {
				moverseA(txtDate.selectedDate);
			}

			protected function cmdRefrescar_clickHandler(event:MouseEvent):void {
				moverseA(txtDate.selectedDate);
			}

			protected function cmbContacto_changeHandler(event:Event):void {
				moverseA(txtDate.selectedDate);
			}

			protected function cmbCapitulo_changeHandler(event:Event):void {
				var selectedItem:Capitulo = cmbCapitulo.selectedItem as Capitulo;

				var tareas:ArrayCollection = new ArrayCollection();
				for each (var tarea:Tarea in CatalogoFactory.getInstance().tareas) {
					if (selectedItem == null || tarea.capituloId == selectedItem.codigo) {
						tareas.addItem(tarea);
					}
				}
				cmbTarea.clear();
				cmbTarea.selectedItems = new ArrayCollection();
				cmbTarea.dataProvider = tareas;

				callLater(function():void {
					moverseA(txtDate.selectedDate);
				});
			}

			protected function txtDate_changeHandler(event:CalendarLayoutChangeEvent):void {
				var nuevaFecha:Date = event.newDate;

				moverseA(nuevaFecha);
			}

			public function moverseA(nuevaFecha:Date):void {
				currentState = "cargando";

				nuevaFecha.hours = 23;
				nuevaFecha.minutes = 59;
				nuevaFecha.seconds = 59;

				var fechaHoy:Date = new Date();

				var tareas:ArrayCollection = cmbTarea.selectedItems;
				var selectedTareas:ArrayCollection = new ArrayCollection();
				for each (var itema:Tarea in tareas) {
					selectedTareas.addItem(itema.codigo);
				}

				var usuarios:ArrayCollection = cmbUsuarioAsignado.selectedItems;
				var selectedUsuarios:ArrayCollection = new ArrayCollection();
				for each (var item:Usuario in usuarios) {
					selectedUsuarios.addItem(item.codigo);
				}

				var query:AgendaTareaQuery = new AgendaTareaQuery();

				var capitulo:Capitulo = cmbCapitulo.selectedItem as Capitulo;
				if (capitulo) {
					if (tareas.length == 0) {
						query.capituloId = capitulo.codigo;
					} else {
						query.tareas = selectedTareas;
					}
				} else {
					query.tareas = selectedTareas;
				}

				var contacto:Contacto = cmbContacto.selectedItem;
				nuevaFecha.hours = 18;

				var supervisor:Usuario = GeneralOptions.getInstance().loggedUser;

				query.fecha = com.adobe.utils.DateUtil.getUTCDate(nuevaFecha);
				query.tareas = selectedTareas;
				query.usuarios = selectedUsuarios;
				query.supervisor = supervisor.codigo;
				if (contacto) {
					query.contacto = contacto.codigo;
				} else {
					query.contacto = null;
				}

				remObj.queryTareasSupervisadas(query);
			}

			private function onResult(event:ResultEvent):void {
				_tareas = event.result as ArrayCollection;

				_tareasMat = new ArrayCollection();
				_tareasVes = new ArrayCollection();

				for each (var tarea:AgendaTareaDTO in _tareas) {
					var hours:int = tarea.fechaHora.hours;
					if (hours < 14) {
						_tareasMat.addItem(tarea);
					} else {
						_tareasVes.addItem(tarea);
					}
				}
				callLater(function():void {
					currentState = "default";
				});
			}

			private function onFault(event:FaultEvent):void {
				currentState = "default";
				Alert.show(event.fault.faultString, 'Error');
			}

			protected function cmdDetalleTareaM_clickHandler(event:MouseEvent):void {
				var wndTarea:TitleWindow = new TitleWindow();
				wndTarea.title = "Detalles";
				wndTarea.width = WINDOW_WIDTH;
				wndTarea.height = WINDOW_HEIGHT;

				var tarea:AgendaTarea = dgMatutinas.currentSelected as AgendaTarea;

				var frmTarea:FrmDetalleTarea = new FrmDetalleTarea();
				frmTarea.tarea = tarea;

				PopUpManager.addPopUp(wndTarea, this, false);
				PopUpManager.centerPopUp(wndTarea);

				wndTarea.addEventListener(CloseEvent.CLOSE, closeHandler);
				frmTarea.addEventListener(CloseEvent.CLOSE, function():void {
					wndTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
					PopUpManager.removePopUp(wndTarea as IFlexDisplayObject);

				});

				wndTarea.addElement(frmTarea);
			}

			protected function cmdDetalleTareaT_clickHandler(event:MouseEvent):void {
				var wndTarea:TitleWindow = new TitleWindow();
				wndTarea.title = "Detalles";
				wndTarea.width = WINDOW_WIDTH;
				wndTarea.height = WINDOW_HEIGHT;

				var tarea:AgendaTarea = dgVespertinas.currentSelected as AgendaTarea;

				var frmTarea:FrmDetalleTarea = new FrmDetalleTarea();
				frmTarea.tarea = tarea;

				PopUpManager.addPopUp(wndTarea, this, false);
				PopUpManager.centerPopUp(wndTarea);

				wndTarea.addEventListener(CloseEvent.CLOSE, closeHandler);
				frmTarea.addEventListener(CloseEvent.CLOSE, function():void {
					wndTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
					PopUpManager.removePopUp(wndTarea as IFlexDisplayObject);
				});
				wndTarea.addElement(frmTarea);
			}

			private function closeHandler(event:Event):void {
				var ttlWnd:TitleWindow = event.target as TitleWindow;
				ttlWnd.removeEventListener(CloseEvent.CLOSE, closeHandler);
				PopUpManager.removePopUp(ttlWnd as IFlexDisplayObject);
			}

			public function codigoNombreLabelFunction(item:Object):String {
				var label:String;
				if (item && item.hasOwnProperty("codigo")) {
					label = item.codigo;
				}
				if (item && item.hasOwnProperty("nombre")) {
					label += " - " + item.nombre;
				}
				return label;
			}
		]]>
	</fx:Script>

	<fx:Declarations>
		<fx:Component id="dropDownItemRenderer">
			<renderers:CodigoNombreItemRenderer />
		</fx:Component>
		<mx:DateFormatter id="dt" formatString="H:NN" />
		<mx:DateFormatter id="dateFormatter" formatString="EEEE, DD de MMMM de YYYY" />
	</fx:Declarations>

	<s:states>
		<s:State name="default" />
		<s:State name="cargando" />
	</s:states>


	<s:VGroup width="100%" height="100%" gap="-1">
		<s:HGroup width="100%" paddingLeft="0" paddingRight="10" paddingTop="10" verticalAlign="middle">
			<s:Label width="110" fontSize="16" textAlign="right" text="Fecha" />
			<mx:DateField id="txtDate" fontSize="14" fontFamily="Helvetica" change="txtDate_changeHandler(event)" selectedDate="{new Date()}" yearNavigationEnabled="true" />

			<s:HGroup horizontalAlign="center" paddingLeft="20" paddingRight="40" verticalAlign="middle">
				<components:IconButton id="cmdPrevious" width="24" height="24" cornerRadius="6" click="cmdPrevious_clickHandler(event)" styleName="previousButton"
									   focusEnabled="false" toolTip="Día Anterior" />
				<s:Button id="cmdFechaHoy" width="60" height="24" cornerRadius="6" fontWeight="bold" click="cmdFechaHoy_clickHandler(event)" label="Hoy" toolTip="Ir Día de hoy"
						  focusEnabled="false" />
				<components:IconButton id="cmdNext" width="24" height="24" cornerRadius="6" click="cmdNext_clickHandler(event)" styleName="nextButton" toolTip="Día Siguiente"
									   focusEnabled="false" />
				<s:Spacer width="8" />
				<s:Button id="cmdRefrescar" fontWeight="bold" click="cmdRefrescar_clickHandler(event)" label="Refrescar" toolTip="Refrescar" focusEnabled="false"
						  styleName="refrescarButton16" />
			</s:HGroup>
			<s:Spacer width="100%" />
			<s:Label fontSize="14" text="{dateFormatter.format(txtDate.selectedDate)}" />
		</s:HGroup>

		<s:HGroup width="100%" paddingBottom="10" paddingLeft="20" paddingRight="10" paddingTop="10" verticalAlign="top">

			<s:VGroup width="170" gap="0">
				<s:Label width="100%" fontWeight="bold" paddingTop="5" textAlign="left" text="Área" />
				<components1:MyAutoComplete id="cmbCapitulo" width="100%" textAlign="left" change="cmbCapitulo_changeHandler(event)" dataProvider="{ catalogs.capitulos }"
											labelField="nombre" matchType="anyPart" prompt="Filtrar por Área" allowNewValues="false"
											selectedItemStyleName="{ AutoComplete.STYLE_MAC_MAIL }" allowDuplicates="false" allowMultipleSelection="false"
											allowEditingNewValues="false" dropDownItemRenderer="{ dropDownItemRenderer }" backspaceAction="focus" dropDownRowCount="5" />
			</s:VGroup>

			<s:VGroup width="240" gap="0">
				<s:Label width="100%" fontWeight="bold" paddingTop="5" textAlign="left" text="Tareas" />
				<components1:MyAutoComplete id="cmbTarea" width="100%" textAlign="left" change="cmbTarea_changeHandler(event)" dataProvider="{ catalogs.tareas }"
											labelField="nombre" matchType="anyPart" prompt="Filtrar por Tareas" allowNewValues="false"
											selectedItemStyleName="{ AutoComplete.STYLE_MAC_MAIL }" allowDuplicates="false" allowMultipleSelection="{ true }"
											allowEditingNewValues="false" dropDownItemRenderer="{ dropDownItemRenderer }" labelFunction="codigoNombreLabelFunction"
											backspaceAction="remove" dropDownRowCount="10" maxHeight="72" />
			</s:VGroup>

			<s:Spacer width="20" />
			<s:VGroup width="240" gap="0">
				<s:Label width="100%" fontWeight="bold" paddingTop="5" textAlign="left" text="Asignados" />
				<components1:MyAutoComplete id="cmbUsuarioAsignado" width="100%" textAlign="left" change="cmbUsuarioAsignado_changeHandler(event)"
											dataProvider="{ catalogs.usuarios }" labelField="nombre" matchType="anyPart" prompt="Filtrar por Usuario Asignado"
											allowNewValues="false" selectedItemStyleName="{ AutoComplete.STYLE_MAC_MAIL }" allowDuplicates="{ false }"
											allowMultipleSelection="{ true }" allowEditingNewValues="{ false }" dropDownItemRenderer="{ dropDownItemRenderer }"
											labelFunction="codigoNombreLabelFunction" backspaceAction="focus" dropDownWidth="320" dropDownRowCount="10" />
			</s:VGroup>

			<s:VGroup width="240" gap="0">
				<s:Label width="100%" fontWeight="bold" paddingTop="5" textAlign="left" text="Contacto" />
				<components1:MyAutoComplete id="cmbContacto" width="100%" textAlign="left" change="cmbContacto_changeHandler(event)" dataProvider="{ catalogs.getContactosActivos() }"
											labelField="nombre" matchType="anyPart" prompt="Filtrar por Contacto" allowNewValues="false"
											selectedItemStyleName="{ AutoComplete.STYLE_MAC_MAIL }" allowDuplicates="false" allowMultipleSelection="false"
											allowEditingNewValues="false" dropDownItemRenderer="{ dropDownItemRenderer }" labelFunction="codigoNombreLabelFunction"
											backspaceAction="focus" dropDownWidth="320" dropDownRowCount="10" />
			</s:VGroup>

		</s:HGroup>

		<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" includeIn="cargando">
			<loader:LoadComponent />
		</s:VGroup>
		
		<s:VGroup width="100%" height="100%" includeIn="default">
			<components:PanelShowHide id="pshTareasManana" width="100%" height="100%" title="En la Mañana" styleName="pnlInterno" defaultHeight="-1" minHeight="0">
				<s:HGroup width="100%" height="100%" paddingBottom="0" paddingLeft="0" paddingRight="5" paddingTop="0" >
					<expediciones:ExpedicionesDataGrid id="dgMatutinas" tareas="{_tareasMat}" turno="{ExpedicionesDataGrid.TURNO_MATUTINO}" mostrarSoloPendientes="true"
													   showDateColumn="true" showStateColumn="false" editableC="false" />
					<s:VGroup width="110" height="100%" paddingRight="5" paddingTop="20" verticalAlign="top">
						<s:Button id="cmdDetalleTareaM" width="100%" click="cmdDetalleTareaM_clickHandler(event)" label="Visualizar" toolTip="Ver detalle tarea"
								  styleName="editarButton" focusEnabled="false" />
					</s:VGroup>
				</s:HGroup>
			</components:PanelShowHide>
			
			<components:PanelShowHide id="pshTareasTarde" width="100%" height="100%" title="En la Tarde" styleName="pnlInterno" defaultHeight="-1">
				<s:HGroup width="100%" height="100%" paddingBottom="0" paddingLeft="0" paddingRight="5" paddingTop="0">
					<expediciones:ExpedicionesDataGrid id="dgVespertinas" tareas="{_tareasVes}" turno="{ExpedicionesDataGrid.TURNO_VESPERTINO}" mostrarSoloPendientes="true"
													   showDateColumn="true" showStateColumn="false" editableC="false" />
					<s:VGroup width="110" height="100%" paddingRight="10" paddingTop="20" verticalAlign="top">
						<s:Button id="cmdDetalleTareaT" width="100%" click="cmdDetalleTareaT_clickHandler(event)" label="Visualizar" toolTip="Ver detalle tarea "
								  styleName="editarButton" focusEnabled="false" />
					</s:VGroup>
				</s:HGroup>
			</components:PanelShowHide>
			
		</s:VGroup>


	</s:VGroup>

</s:VGroup>
