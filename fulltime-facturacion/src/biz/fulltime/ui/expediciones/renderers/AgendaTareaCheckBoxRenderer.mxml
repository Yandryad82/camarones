<?xml version="1.0" encoding="utf-8"?>
<s:MXAdvancedDataGridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark"
								  focusEnabled="true">

	<fx:Script>
		<![CDATA[
			import biz.fulltime.conf.ServerConfig;
			import biz.fulltime.dto.AgendaTareaDTO;
			import biz.fulltime.event.FinalizarTareaEvent;
			import biz.fulltime.model.AgendaTarea;
			
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridListData;
			import mx.controls.listClasses.BaseListData;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;

			[Bindable]
			private var _colorBackground:uint = 0xffffff;

			[Bindable]
			private var _colorForeground:uint = 0xffffff;
			
			[Bindable]
			private var _alpha:Number = .16;
			
			
			private var titleWindow:TitleWindow;

			protected function checkbox2_changeHandler(event:Event):void {
				var custom:CustomTitleWindow = new CustomTitleWindow();
				
				titleWindow = PopUpManager.createPopUp(this.parentApplication.owner, CustomTitleWindow, true) as TitleWindow;
				PopUpManager.centerPopUp(titleWindow);
				
				titleWindow.addEventListener(FinalizarTareaEvent.CANCELAR_FIN_TAREA, function(evt:FinalizarTareaEvent):void {
					chbEstado.selected = false;
				});
				titleWindow.addEventListener(FinalizarTareaEvent.FINALIZAR_TAREA, function(evt:FinalizarTareaEvent):void {
					var nota:String = evt.nota;
					var tarea:AgendaTareaDTO = AdvancedDataGridListData(listData).item as AgendaTareaDTO;
					
					var remObj:RemoteObject = new RemoteObject();
					remObj.destination = "CreatingRpc";
					remObj.channelSet = ServerConfig.getInstance().channelSet;
					remObj.showBusyCursor = true;
					remObj.addEventListener(FaultEvent.FAULT, onFault);
					remObj.addEventListener(ResultEvent.RESULT, function(event:ResultEvent):void {
						var agendaTarea:AgendaTarea = event.result as AgendaTarea;
						
						var dateFormatter:DateFormatter = new DateFormatter();
						dateFormatter.formatString = "DD/MM/YYYY JJ:NN";
						
						if (agendaTarea.notas) {
							agendaTarea.notas += "\n-------------------------------------\n" +
							"Finalizó: " + dateFormatter.format(new Date()) +
							"\n-------------------------------------\n" +
							"NOTA FIN DE TAREA:\n" + (nota ? nota : ''); 
						} else {
							agendaTarea.notas = "Finalizó: " + dateFormatter.format(new Date()) + "\n\n" +
								"NOTA FIN DE TAREA:\n\n" + (nota ? nota : '');
						}
						agendaTarea.estado = "C";
					});					
					remObj.getAgendaTarea(tarea.ageId);
					
					chbEstado.selected = true;
					tarea.fechaHoraFin = new Date();
					tarea.estado = "C";
				});

			}
			
			private function onFault(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
			}

			
			override public function set listData(value:BaseListData):void {
				super.listData = value;

				if (value) {
					var agendaTarea:AgendaTareaDTO = AdvancedDataGridListData(value).item as AgendaTareaDTO;
					if (agendaTarea) {					
						if (agendaTarea.estado == "C") {
							if (agendaTarea.fechaHoraFin == null) {
								_colorBackground = 0xFFFF00;
								_colorForeground = 0x000000;
								_alpha = .24;
							} else {
								_colorBackground = 0x00FF00;
								_colorForeground = 0x000000;
								_alpha = .02;
							} 							
						} else if (agendaTarea.estado == "P") {
							var fechaInicio:Date = agendaTarea.fechaInicio;
							var fecha:Date = agendaTarea.fechaHora;
							
							if (fecha.date != fechaInicio.date || fecha.month != fechaInicio.month) {
								_colorBackground = 0xFF0000;
								_colorForeground = 0x000000;
								_alpha = .015;
							} else{
								_colorBackground = 0xDADADA;
								_colorForeground = 0x000000;
								_alpha = .24;
							}
							
						} else {
							_colorBackground = 0x000000;
							_colorForeground = 0x222222;
							_alpha = .84;						
						}
						chbEstado.selected = agendaTarea.estado == "C";
						chbEstado.enabled = !chbEstado.selected;
					}			

				}
			}
		]]>
	</fx:Script>

	<s:Rect left="0" right="0" top="-2" bottom="-2">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xFFFFFF" alpha="{_alpha*4}" ratio=".00"/>
				<s:GradientEntry color="{_colorBackground}" alpha="{_alpha}" ratio=".09" />
				<s:GradientEntry color="{_colorBackground}" alpha="{_alpha}" ratio=".96"/>
				<s:GradientEntry color="{_colorBackground}" alpha="{_alpha*2}" ratio=".96"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center" paddingTop="2">
		<s:CheckBox id="chbEstado" verticalCenter="0" change="checkbox2_changeHandler(event)" toolTip="{chbEstado.selected ? 'Finalizada' : 'Pendiente'}"
					enabled="{!selected}" skinClass="biz.fulltime.ui.expediciones.renderers.MyCheckBoxSkin"/>
	</s:HGroup>

</s:MXAdvancedDataGridItemRenderer>
