<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:components="components.*" xmlns:components1="biz.fulltime.ui.components.*" xmlns:expediciones="biz.fulltime.ui.expediciones.*"
		  xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:renderers="biz.fulltime.ui.renderers.*"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  width="100%" height="100%" creationComplete="creationCompleteHandler(event)" xmlns:loader="biz.fulltime.util.loader.*" >
	<fx:Script>
		<![CDATA[
			import biz.fulltime.conf.ServerConfig;
			import biz.fulltime.dto.AgendaTareaDTO;
			import biz.fulltime.expediciones.AgendaTareaQuery;
			import biz.fulltime.model.AgendaTarea;
			import biz.fulltime.model.Capitulo;
			import biz.fulltime.model.Contacto;
			import biz.fulltime.model.Tarea;
			import biz.fulltime.model.Usuario;
			
			import com.hillelcoren.components.AutoComplete;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			import spark.components.TitleWindow;
			
			import util.CatalogoFactory;
			
			private var remObj:RemoteObject;
			
			[Bindable]
			private var _tareas:ArrayCollection;

			[Bindable]
			private var catalogs:CatalogoFactory = CatalogoFactory.getInstance();
			
			private const WINDOW_WIDTH:Number = 800;
			
			private const WINDOW_HEIGHT:Number = 640;


			protected function creationCompleteHandler(event:FlexEvent):void {
				remObj = new RemoteObject();
				remObj.destination = "CreatingRpc";
				remObj.channelSet = ServerConfig.getInstance().channelSet;
				remObj.showBusyCursor = true;
				remObj.addEventListener(ResultEvent.RESULT, onResult);
				remObj.addEventListener(FaultEvent.FAULT, onFault);
				
				currentState = "default2";
				
				cmdFilter_clickHandler(null);
			}
			
			private function onResult(event:ResultEvent):void {
				tareas = event.result as ArrayCollection;
				
				callLater(function():void {
					currentState = "default2";
				});
			}

			private function onFault(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
				
				currentState = "default2";
			}

			[Bindable]
			public function get tareas():ArrayCollection {
				return _tareas;
			}

			public function set tareas(value:ArrayCollection):void {
				_tareas = value;
			}

			public function codigoNombreLabelFunction(item:Object):String {
				var label:String;
				if (item && item.hasOwnProperty("codigo")) {
					label = item.codigo;
				}
				if (item && item.hasOwnProperty("nombre")) {
					label += " - " + item.nombre;
				}
				return label;
			}
			

			protected function cmbUsuarioAsignado_changeHandler(event:Event):void {
			}

			protected function cmbUsuarioAsignado_keyDownHandler(event:KeyboardEvent):void {
			}

			protected function cmbTarea_changeHandler(event:Event):void {
				// TODO Auto-generated method stub
			}
			
			protected function cmbTarea_keyDownHandler(event:KeyboardEvent):void {
				// TODO Auto-generated method stub
			}
			
			protected function cmbContacto_changeHandler(event:Event):void {
				// TODO Auto-generated method stub
			}
			
			protected function cmbContacto_keyDownHandler(event:KeyboardEvent):void {
				// TODO Auto-generated method stub
			}
			
			protected function cmdEditarTarea_clickHandler(event:MouseEvent):void {
				var wndTarea:TitleWindow = new TitleWindow();
				wndTarea.title = "Editar Tarea";
				wndTarea.width = WINDOW_WIDTH;
				wndTarea.height = WINDOW_HEIGHT;
				
				var tarea:AgendaTarea = dgTareas.currentSelected as AgendaTarea;
								
				var frmNuevaTarea:FrmNuevaTarea = new FrmNuevaTarea();
				frmNuevaTarea.nueva = false;
				frmNuevaTarea.tarea = tarea;
				frmNuevaTarea.matutina = true;
				//frmNuevaTarea.showNavegationButton = true;
				
				PopUpManager.addPopUp(wndTarea, this, false);
				PopUpManager.centerPopUp(wndTarea);
				
				wndTarea.addEventListener(CloseEvent.CLOSE, closeHandler);
				frmNuevaTarea.addEventListener(CloseEvent.CLOSE, function():void {
					wndTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
					PopUpManager.removePopUp(wndTarea as IFlexDisplayObject);
					
				});
				
				frmNuevaTarea.addEventListener("_savedOk", function():void {
					wndTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
					PopUpManager.removePopUp(wndTarea as IFlexDisplayObject);
				});
				
				
				wndTarea.addElement(frmNuevaTarea);
			}
			
			protected function cmdDetalleTarea_clickHandler(event:MouseEvent):void {
				var wndTarea:TitleWindow = new TitleWindow();
				wndTarea.title = "Detalle Tarea";
				wndTarea.width = WINDOW_WIDTH;
				wndTarea.height = WINDOW_HEIGHT;
				
				var tarea:AgendaTarea = dgTareas.currentSelected as AgendaTarea;
				
				var frmTarea:FrmDetalleTarea = new FrmDetalleTarea();
				frmTarea.tarea = tarea;
				
				PopUpManager.addPopUp(wndTarea, this, false);
				PopUpManager.centerPopUp(wndTarea);
				
				wndTarea.addEventListener(CloseEvent.CLOSE, closeHandler);
				frmTarea.addEventListener(CloseEvent.CLOSE, function():void {
					wndTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
					PopUpManager.removePopUp(wndTarea as IFlexDisplayObject);
				});
				
				wndTarea.addElement(frmTarea);
				
			}
			
			protected function cmdReagendar_clickHandler(event:MouseEvent):void {
				var wndReagendarTarea:TitleWindow = new TitleWindow();
				wndReagendarTarea.title = "Reagendar Tarea";
				wndReagendarTarea.width = WINDOW_WIDTH;
				wndReagendarTarea.height = WINDOW_HEIGHT - 140;
				
				var tarea:AgendaTarea = dgTareas.currentSelected as AgendaTarea;
				
				var frmReagendarTarea:FrmReagendarTareas = new FrmReagendarTareas();
				frmReagendarTarea.tarea = tarea;
				frmReagendarTarea.matutino = true;
				
				PopUpManager.addPopUp(wndReagendarTarea, this, false);
				PopUpManager.centerPopUp(wndReagendarTarea);
				
				wndReagendarTarea.addEventListener(CloseEvent.CLOSE, closeHandler);
				frmReagendarTarea.addEventListener(CloseEvent.CLOSE, function():void {
					wndReagendarTarea.removeEventListener(CloseEvent.CLOSE, closeHandler);
					PopUpManager.removePopUp(wndReagendarTarea as IFlexDisplayObject);
					
					if (!frmReagendarTarea.cancelPressed) {
						var nuevaFecha:Date = frmReagendarTarea.nuevaFecha;
						tarea.estado = "C";
						tarea.fechaHoraFin = null;
					}
				});
				
				wndReagendarTarea.addElement(frmReagendarTarea);
			}


			private function closeHandler(event:Event):void {
				var ttlWnd:TitleWindow = event.target as TitleWindow;
				ttlWnd.removeEventListener(CloseEvent.CLOSE, closeHandler);
				PopUpManager.removePopUp(ttlWnd as IFlexDisplayObject);
			}

			protected function cmdFilter_clickHandler(event:MouseEvent):void {
				currentState = "cargando";

				var query:AgendaTareaQuery = new AgendaTareaQuery();

				query.fechaDesde = txtFechaDesde.selectedDate;
				query.fechaHasta = txtFechaHasta.selectedDate;
				
				var tareas:ArrayCollection = cmbTarea.selectedItems;
				var selectedTareas:ArrayCollection = new ArrayCollection();
				for each (var itema:Tarea in tareas) {
					selectedTareas.addItem(itema.codigo);
				}
				
				var asignados:ArrayCollection = cmbAsignado.selectedItems;
				var selectedAsignados:ArrayCollection = new ArrayCollection();
				for each (var itemb:Usuario in asignados) {
					selectedAsignados.addItem(itemb.codigo);
				}

				var contactos:ArrayCollection = cmbContacto.selectedItems;
				var selectedContactos:ArrayCollection = new ArrayCollection();
				for each (var itemc:Contacto in contactos) {
					selectedContactos.addItem(itemc.codigo);
				}
				
				var capitulo:Capitulo = cmbCapitulo.selectedItem as Capitulo;
				if (capitulo) {					
					if (tareas.length == 0) {
						query.capituloId = capitulo.codigo; 												
					} else {
						query.tareas = selectedTareas;
					}
				} else {
					query.tareas = selectedTareas;
				}

				query.asignado = selectedAsignados.length > 0 ? selectedAsignados.getItemAt(0) as String : null; 
				query.contacto = selectedContactos.length > 0 ? selectedContactos.getItemAt(0) as String : null;
				query.tareas = selectedTareas;
				
				remObj.queryTareas(query);

			}
			
			protected function cmdLimpiar_clickHandler(event:MouseEvent):void {
				txtFechaDesde.selectedDate = null;
				txtFechaHasta.selectedDate = null;
				
				cmbTarea.clear();

				cmbAsignado.clear();
				cmbContacto.clear();
			}

			protected function cmbCapitulo_changeHandler(event:Event):void {
				var selectedItem:Capitulo = cmbCapitulo.selectedItem as Capitulo;
				
				var tareas:ArrayCollection = new ArrayCollection();
				for each (var tarea:Tarea in CatalogoFactory.getInstance().tareas) {
					if (selectedItem == null || tarea.capituloId == selectedItem.codigo) {
						tareas.addItem(tarea);
					}
				}					
				cmbTarea.clear();
				cmbTarea.selectedItems = new ArrayCollection();
				cmbTarea.dataProvider = tareas;
				
				callLater(function():void {
					cmbTarea.selectedItems = new ArrayCollection();
				});				
				
			}
			
			protected function txtFechaDesde_creationCompleteHandler(event:FlexEvent):void {
				var fechaDesde:Date = new Date();
				
				fechaDesde = util.DateUtil.clone(fechaDesde).subtract(util.DateUtil.DAY, 7).datetime;
				txtFechaDesde.selectedDate = fechaDesde;
			}
			
			protected function txtFechaHasta_creationCompleteHandler(event:FlexEvent):void {
				txtFechaHasta.selectedDate = new Date();
				
			}
			
		]]>
	</fx:Script>

	<fx:Declarations>
		<fx:Component id="dropDownItemRenderer">
			<renderers:CodigoNombreItemRenderer />
		</fx:Component>
	</fx:Declarations>
	
	<s:states>
		<s:State name="default2" />
		<s:State name="cargando" />
	</s:states>

	<s:Panel width="100%" height="154" title="Filtros" minHeight="25" backgroundAlpha="0.0">
		<s:HGroup width="100%" height="100%" paddingBottom="16" paddingTop="-10">
			<s:Form>
				<s:layout>
					<s:FormLayout gap="-14" paddingBottom="10"/>
				</s:layout>
				
				<s:FormItem width="100%" textAlign="right" label="Área">
					<components1:MyAutoComplete id="cmbCapitulo" width="320" textAlign="left" change="cmbCapitulo_changeHandler(event)"
												dataProvider="{ catalogs.capitulos }" labelField="nombre" matchType="anyPart" prompt="Filtrar por Área" allowNewValues="false"
												selectedItemStyleName="{ AutoComplete.STYLE_MAC_MAIL }" allowDuplicates="false" allowMultipleSelection="false"
												allowEditingNewValues="false" dropDownItemRenderer="{ dropDownItemRenderer }" 
												backspaceAction="focus" dropDownRowCount="5" />
				</s:FormItem>
				<s:FormItem width="100%" label="Tarea" textAlign="right">
					<components1:MyAutoComplete id="cmbTarea" width="320" textAlign="left" change="cmbTarea_changeHandler(event)" keyDown="cmbTarea_keyDownHandler(event)"
												dataProvider="{ catalogs.tareas }" labelField="nombre" matchType="anyPart" prompt="Tareas" allowNewValues="false"
												selectedItemStyleName="{ AutoComplete.STYLE_MAC_MAIL }" allowDuplicates="false" allowMultipleSelection="{ true }"
												allowEditingNewValues="false" dropDownItemRenderer="{ dropDownItemRenderer }" labelFunction="codigoNombreLabelFunction"
												backspaceAction="focus" dropDownWidth="320" dropDownRowCount="10" />
				</s:FormItem>
			</s:Form>

			<s:Form width="300">
				<s:layout>
					<s:FormLayout gap="-14" paddingBottom="10"/>
				</s:layout>    
				<s:FormItem width="100%" textAlign="right" label="Asignado">
					<components1:MyAutoComplete id="cmbAsignado" width="200" textAlign="left" change="cmbUsuarioAsignado_changeHandler(event)"
												keyDown="cmbUsuarioAsignado_keyDownHandler(event)" dataProvider="{ catalogs.usuarios }" labelField="nombre" matchType="anyPart"
												prompt="Usuario" allowNewValues="false" selectedItemStyleName="{ AutoComplete.STYLE_MAC_MAIL }" allowDuplicates="{ false }"
												allowMultipleSelection="false" allowEditingNewValues="false" dropDownItemRenderer="{ dropDownItemRenderer }"
												labelFunction="codigoNombreLabelFunction" backspaceAction="focus" dropDownWidth="320" dropDownRowCount="10" />
				</s:FormItem>
				<s:FormItem label="Contacto" textAlign="right" >
					<components1:MyAutoComplete id="cmbContacto" width="200" textAlign="left" change="cmbContacto_changeHandler(event)"
											   keyDown="cmbContacto_keyDownHandler(event)"  dataProvider="{ catalogs.getContactosActivos() }" labelField="nombre"
											   matchType="anyPart" prompt="Filtrar por Contacto" allowNewValues="false" selectedItemStyleName="{ AutoComplete.STYLE_MAC_MAIL }"
											   allowDuplicates="false" allowMultipleSelection="false" allowEditingNewValues="false"
											   dropDownItemRenderer="{ dropDownItemRenderer }" labelFunction="codigoNombreLabelFunction" backspaceAction="focus"
											   dropDownWidth="320" dropDownRowCount="10" />
				</s:FormItem>
			</s:Form>
			<s:Form>
				<s:layout>
					<s:FormLayout gap="-14" paddingLeft="10" paddingBottom="10"/>
				</s:layout>    
				<s:FormItem label="Fecha Desde">
					<mx:DateField id="txtFechaDesde" width="110" yearNavigationEnabled="true" focusEnabled="true" creationComplete="txtFechaDesde_creationCompleteHandler(event)"/>
				</s:FormItem>
				<s:FormItem label="Fecha Hasta">
					<mx:DateField id="txtFechaHasta" width="110" yearNavigationEnabled="true" focusEnabled="true" creationComplete="txtFechaHasta_creationCompleteHandler(event)"/>
				</s:FormItem>
			</s:Form>
		</s:HGroup>
		<s:controlBarContent>
			<s:HGroup width="100%" horizontalAlign="right" paddingBottom="0" paddingTop="0">
				<mx:Image id="loader1" source="@Embed(source='assets/general/logo_oscuro.gif')" alpha=".5" scaleX=".25" scaleY=".25" />
				<s:Spacer width="100%" />
				<s:Button id="cmdFiltrar" click="cmdFilter_clickHandler(event)" label="Filtrar" styleName="filtrarButton"  enabled="true" toolTip="Filtrar Facturas" />
				<s:Button id="cmdLimpiar" click="cmdLimpiar_clickHandler(event)" label="Limpiar" styleName="clearButton16" toolTip="Limpiar Todos los Campos" />
			</s:HGroup>
		</s:controlBarContent>

	</s:Panel>
	<s:Panel id="pshTareas" width="100%" height="100%" title="Resultados">
		<s:VGroup width="100%" height="100%" includeIn="cargando" horizontalAlign="center" verticalAlign="middle">
			<loader:LoadComponent />
		</s:VGroup>

		<s:HGroup width="100%" height="100%" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" includeIn="default2" gap="0">
			<expediciones:ExpedicionesDataGrid id="dgTareas" width="100%" height="100%" tareas="{tareas}" showDateColumn="true" />
			
			<s:BorderContainer width="110" height="100%" backgroundColor="0xF6F6F6" borderAlpha="0">
				<s:layout>
					<s:VerticalLayout paddingLeft="5" paddingRight="5" paddingTop="30" verticalAlign="top" />
				</s:layout>
				<s:Button id="cmdEditarTarea" width="100%" click="cmdEditarTarea_clickHandler(event)" label="Editar" toolTip="Editar tarea"
						  enabled="{dgTareas.grid.selectedIndex >= 0 &amp;&amp; AgendaTareaDTO(dgTareas.grid.selectedItem).estado == 'P'}"
						  styleName="editarButton" focusEnabled="false" />
				<s:Button id="cmdDetalleTarea" width="100%" click="cmdDetalleTarea_clickHandler(event)" label="Ver" toolTip="Ver detalle"
						  enabled="{dgTareas.grid.selectedIndex >= 0 &amp;&amp; AgendaTareaDTO(dgTareas.grid.selectedItem).estado == 'C'}"
						  styleName="textButton" focusEnabled="false" />
				<s:Spacer height="10" />
				<s:Button id="cmdReagendar" width="100%" click="cmdReagendar_clickHandler(event)" label="Reagendar" toolTip="Reagendar tarea"
						  enabled="{dgTareas.grid.selectedIndex >= 0 &amp;&amp; AgendaTareaDTO(dgTareas.grid.selectedItem).estado == 'P'}"
						  styleName="textButton" focusEnabled="false" />
				<s:Spacer height="40" />
			</s:BorderContainer>
		</s:HGroup>

	</s:Panel>

</s:VGroup>
